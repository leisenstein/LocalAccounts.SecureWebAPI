#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocalAccountsv2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prod_20141109")]
	public partial class SNAPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSNAP_Address(SNAP_Address instance);
    partial void UpdateSNAP_Address(SNAP_Address instance);
    partial void DeleteSNAP_Address(SNAP_Address instance);
    partial void InsertSNAP_EmailAddress(SNAP_EmailAddress instance);
    partial void UpdateSNAP_EmailAddress(SNAP_EmailAddress instance);
    partial void DeleteSNAP_EmailAddress(SNAP_EmailAddress instance);
    partial void InsertSNAP_ExternalPartyMembership(SNAP_ExternalPartyMembership instance);
    partial void UpdateSNAP_ExternalPartyMembership(SNAP_ExternalPartyMembership instance);
    partial void DeleteSNAP_ExternalPartyMembership(SNAP_ExternalPartyMembership instance);
    partial void InsertSNAP_ExternalPartyMembershipType(SNAP_ExternalPartyMembershipType instance);
    partial void UpdateSNAP_ExternalPartyMembershipType(SNAP_ExternalPartyMembershipType instance);
    partial void DeleteSNAP_ExternalPartyMembershipType(SNAP_ExternalPartyMembershipType instance);
    partial void InsertSNAP_Party(SNAP_Party instance);
    partial void UpdateSNAP_Party(SNAP_Party instance);
    partial void DeleteSNAP_Party(SNAP_Party instance);
    partial void InsertSNAP_PhoneNumber(SNAP_PhoneNumber instance);
    partial void UpdateSNAP_PhoneNumber(SNAP_PhoneNumber instance);
    partial void DeleteSNAP_PhoneNumber(SNAP_PhoneNumber instance);
    partial void InsertSNAP_Profile(SNAP_Profile instance);
    partial void UpdateSNAP_Profile(SNAP_Profile instance);
    partial void DeleteSNAP_Profile(SNAP_Profile instance);
    partial void InsertSNAP_ProfileProperty(SNAP_ProfileProperty instance);
    partial void UpdateSNAP_ProfileProperty(SNAP_ProfileProperty instance);
    partial void DeleteSNAP_ProfileProperty(SNAP_ProfileProperty instance);
    partial void InsertSNAP_ProfileTemplate(SNAP_ProfileTemplate instance);
    partial void UpdateSNAP_ProfileTemplate(SNAP_ProfileTemplate instance);
    partial void DeleteSNAP_ProfileTemplate(SNAP_ProfileTemplate instance);
    partial void InsertSNAP_RegionDefinition(SNAP_RegionDefinition instance);
    partial void UpdateSNAP_RegionDefinition(SNAP_RegionDefinition instance);
    partial void DeleteSNAP_RegionDefinition(SNAP_RegionDefinition instance);
    partial void InsertSNAP_Website(SNAP_Website instance);
    partial void UpdateSNAP_Website(SNAP_Website instance);
    partial void DeleteSNAP_Website(SNAP_Website instance);
    partial void InsertSNAP_ServiceArea(SNAP_ServiceArea instance);
    partial void UpdateSNAP_ServiceArea(SNAP_ServiceArea instance);
    partial void DeleteSNAP_ServiceArea(SNAP_ServiceArea instance);
    #endregion
		
		public SNAPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["prod_20141109ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SNAPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNAPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNAPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNAPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SNAP_Address> SNAP_Addresses
		{
			get
			{
				return this.GetTable<SNAP_Address>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_EmailAddress> SNAP_EmailAddresses
		{
			get
			{
				return this.GetTable<SNAP_EmailAddress>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_ExternalPartyMembership> SNAP_ExternalPartyMemberships
		{
			get
			{
				return this.GetTable<SNAP_ExternalPartyMembership>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_ExternalPartyMembershipType> SNAP_ExternalPartyMembershipTypes
		{
			get
			{
				return this.GetTable<SNAP_ExternalPartyMembershipType>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_Party> SNAP_Parties
		{
			get
			{
				return this.GetTable<SNAP_Party>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_PhoneNumber> SNAP_PhoneNumbers
		{
			get
			{
				return this.GetTable<SNAP_PhoneNumber>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_Profile> SNAP_Profiles
		{
			get
			{
				return this.GetTable<SNAP_Profile>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_ProfileProperty> SNAP_ProfileProperties
		{
			get
			{
				return this.GetTable<SNAP_ProfileProperty>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_ProfileTemplate> SNAP_ProfileTemplates
		{
			get
			{
				return this.GetTable<SNAP_ProfileTemplate>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_RegionDefinition> SNAP_RegionDefinitions
		{
			get
			{
				return this.GetTable<SNAP_RegionDefinition>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_RegionsServed> SNAP_RegionsServeds
		{
			get
			{
				return this.GetTable<SNAP_RegionsServed>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_Website> SNAP_Websites
		{
			get
			{
				return this.GetTable<SNAP_Website>();
			}
		}
		
		public System.Data.Linq.Table<SNAP_ServiceArea> SNAP_ServiceAreas
		{
			get
			{
				return this.GetTable<SNAP_ServiceArea>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SNAP_GetPartyForProfile_UseDistanceRange")]
		public ISingleResult<SNAP_GetPartyForProfile_UseDistanceRangeResult> SNAP_GetPartyForProfile_UseDistanceRange([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string vcProfileType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string vcProfileTypeProperty, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string vcDemographics, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intRange, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string vcPartyProviderName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vcProfileType, vcProfileTypeProperty, vcDemographics, intRange, vcPartyProviderName);
			return ((ISingleResult<SNAP_GetPartyForProfile_UseDistanceRangeResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_Address")]
	public partial class SNAP_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private string _Purpose;
		
		private string _Attention;
		
		private string _Address;
		
		private string _ApartmentOrSuite;
		
		private string _PostalCode;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<int> _PartyId;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private System.Nullable<bool> _IsPreferred;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _AutoStandardize;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnAttentionChanging(string value);
    partial void OnAttentionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnApartmentOrSuiteChanging(string value);
    partial void OnApartmentOrSuiteChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnPartyIdChanging(System.Nullable<int> value);
    partial void OnPartyIdChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    partial void OnIsPreferredChanging(System.Nullable<bool> value);
    partial void OnIsPreferredChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAutoStandardizeChanging(System.Nullable<bool> value);
    partial void OnAutoStandardizeChanged();
    #endregion
		
		public SNAP_Address()
		{
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attention", DbType="NVarChar(80)")]
		public string Attention
		{
			get
			{
				return this._Attention;
			}
			set
			{
				if ((this._Attention != value))
				{
					this.OnAttentionChanging(value);
					this.SendPropertyChanging();
					this._Attention = value;
					this.SendPropertyChanged("Attention");
					this.OnAttentionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApartmentOrSuite", DbType="NVarChar(40)")]
		public string ApartmentOrSuite
		{
			get
			{
				return this._ApartmentOrSuite;
			}
			set
			{
				if ((this._ApartmentOrSuite != value))
				{
					this.OnApartmentOrSuiteChanging(value);
					this.SendPropertyChanging();
					this._ApartmentOrSuite = value;
					this.SendPropertyChanged("ApartmentOrSuite");
					this.OnApartmentOrSuiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(40)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(80)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int")]
		public System.Nullable<int> PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPreferred", DbType="Bit")]
		public System.Nullable<bool> IsPreferred
		{
			get
			{
				return this._IsPreferred;
			}
			set
			{
				if ((this._IsPreferred != value))
				{
					this.OnIsPreferredChanging(value);
					this.SendPropertyChanging();
					this._IsPreferred = value;
					this.SendPropertyChanged("IsPreferred");
					this.OnIsPreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoStandardize", DbType="Bit")]
		public System.Nullable<bool> AutoStandardize
		{
			get
			{
				return this._AutoStandardize;
			}
			set
			{
				if ((this._AutoStandardize != value))
				{
					this.OnAutoStandardizeChanging(value);
					this.SendPropertyChanging();
					this._AutoStandardize = value;
					this.SendPropertyChanged("AutoStandardize");
					this.OnAutoStandardizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Address", Storage="_SNAP_Party", ThisKey="PartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_Addresses.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_Addresses.Add(this);
						this._PartyId = value.PartyId;
					}
					else
					{
						this._PartyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_EmailAddress")]
	public partial class SNAP_EmailAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailAddressId;
		
		private string _Purpose;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _PartyId;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private System.Nullable<bool> _IsPreferred;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIdChanging(int value);
    partial void OnEmailAddressIdChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPartyIdChanging(System.Nullable<int> value);
    partial void OnPartyIdChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    partial void OnIsPreferredChanging(System.Nullable<bool> value);
    partial void OnIsPreferredChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SNAP_EmailAddress()
		{
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailAddressId
		{
			get
			{
				return this._EmailAddressId;
			}
			set
			{
				if ((this._EmailAddressId != value))
				{
					this.OnEmailAddressIdChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressId = value;
					this.SendPropertyChanged("EmailAddressId");
					this.OnEmailAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int")]
		public System.Nullable<int> PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPreferred", DbType="Bit")]
		public System.Nullable<bool> IsPreferred
		{
			get
			{
				return this._IsPreferred;
			}
			set
			{
				if ((this._IsPreferred != value))
				{
					this.OnIsPreferredChanging(value);
					this.SendPropertyChanging();
					this._IsPreferred = value;
					this.SendPropertyChanged("IsPreferred");
					this.OnIsPreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_EmailAddress", Storage="_SNAP_Party", ThisKey="PartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_EmailAddresses.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_EmailAddresses.Add(this);
						this._PartyId = value.PartyId;
					}
					else
					{
						this._PartyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_ExternalPartyMembership")]
	public partial class SNAP_ExternalPartyMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartyId;
		
		private string _ExternalId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private int _ExternalPartyMembershipTypeId;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private EntityRef<SNAP_ExternalPartyMembershipType> _SNAP_ExternalPartyMembershipType;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartyIdChanging(int value);
    partial void OnPartyIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnExternalPartyMembershipTypeIdChanging(int value);
    partial void OnExternalPartyMembershipTypeIdChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    #endregion
		
		public SNAP_ExternalPartyMembership()
		{
			this._SNAP_ExternalPartyMembershipType = default(EntityRef<SNAP_ExternalPartyMembershipType>);
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(40)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalPartyMembershipTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExternalPartyMembershipTypeId
		{
			get
			{
				return this._ExternalPartyMembershipTypeId;
			}
			set
			{
				if ((this._ExternalPartyMembershipTypeId != value))
				{
					if (this._SNAP_ExternalPartyMembershipType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternalPartyMembershipTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalPartyMembershipTypeId = value;
					this.SendPropertyChanged("ExternalPartyMembershipTypeId");
					this.OnExternalPartyMembershipTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_ExternalPartyMembershipType_SNAP_ExternalPartyMembership", Storage="_SNAP_ExternalPartyMembershipType", ThisKey="ExternalPartyMembershipTypeId", OtherKey="ExternalPartyMembershipTypeId", IsForeignKey=true)]
		public SNAP_ExternalPartyMembershipType SNAP_ExternalPartyMembershipType
		{
			get
			{
				return this._SNAP_ExternalPartyMembershipType.Entity;
			}
			set
			{
				SNAP_ExternalPartyMembershipType previousValue = this._SNAP_ExternalPartyMembershipType.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_ExternalPartyMembershipType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_ExternalPartyMembershipType.Entity = null;
						previousValue.SNAP_ExternalPartyMemberships.Remove(this);
					}
					this._SNAP_ExternalPartyMembershipType.Entity = value;
					if ((value != null))
					{
						value.SNAP_ExternalPartyMemberships.Add(this);
						this._ExternalPartyMembershipTypeId = value.ExternalPartyMembershipTypeId;
					}
					else
					{
						this._ExternalPartyMembershipTypeId = default(int);
					}
					this.SendPropertyChanged("SNAP_ExternalPartyMembershipType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_ExternalPartyMembership", Storage="_SNAP_Party", ThisKey="PartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_ExternalPartyMemberships.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_ExternalPartyMemberships.Add(this);
						this._PartyId = value.PartyId;
					}
					else
					{
						this._PartyId = default(int);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_ExternalPartyMembershipType")]
	public partial class SNAP_ExternalPartyMembershipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Issuer;
		
		private string _FullName;
		
		private string _Abbreviation;
		
		private string _Category;
		
		private int _ExternalPartyMembershipTypeId;
		
		private string _Logo;
		
		private string _MoreInfoUrl;
		
		private string _Description;
		
		private EntitySet<SNAP_ExternalPartyMembership> _SNAP_ExternalPartyMemberships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIssuerChanging(string value);
    partial void OnIssuerChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnExternalPartyMembershipTypeIdChanging(int value);
    partial void OnExternalPartyMembershipTypeIdChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnMoreInfoUrlChanging(string value);
    partial void OnMoreInfoUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SNAP_ExternalPartyMembershipType()
		{
			this._SNAP_ExternalPartyMemberships = new EntitySet<SNAP_ExternalPartyMembership>(new Action<SNAP_ExternalPartyMembership>(this.attach_SNAP_ExternalPartyMemberships), new Action<SNAP_ExternalPartyMembership>(this.detach_SNAP_ExternalPartyMemberships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issuer", DbType="VarChar(448) NOT NULL", CanBeNull=false)]
		public string Issuer
		{
			get
			{
				return this._Issuer;
			}
			set
			{
				if ((this._Issuer != value))
				{
					this.OnIssuerChanging(value);
					this.SendPropertyChanging();
					this._Issuer = value;
					this.SendPropertyChanged("Issuer");
					this.OnIssuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(448) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="VarChar(40)")]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalPartyMembershipTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExternalPartyMembershipTypeId
		{
			get
			{
				return this._ExternalPartyMembershipTypeId;
			}
			set
			{
				if ((this._ExternalPartyMembershipTypeId != value))
				{
					this.OnExternalPartyMembershipTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalPartyMembershipTypeId = value;
					this.SendPropertyChanged("ExternalPartyMembershipTypeId");
					this.OnExternalPartyMembershipTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(1000)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreInfoUrl", DbType="VarChar(1000)")]
		public string MoreInfoUrl
		{
			get
			{
				return this._MoreInfoUrl;
			}
			set
			{
				if ((this._MoreInfoUrl != value))
				{
					this.OnMoreInfoUrlChanging(value);
					this.SendPropertyChanging();
					this._MoreInfoUrl = value;
					this.SendPropertyChanged("MoreInfoUrl");
					this.OnMoreInfoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_ExternalPartyMembershipType_SNAP_ExternalPartyMembership", Storage="_SNAP_ExternalPartyMemberships", ThisKey="ExternalPartyMembershipTypeId", OtherKey="ExternalPartyMembershipTypeId")]
		public EntitySet<SNAP_ExternalPartyMembership> SNAP_ExternalPartyMemberships
		{
			get
			{
				return this._SNAP_ExternalPartyMemberships;
			}
			set
			{
				this._SNAP_ExternalPartyMemberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SNAP_ExternalPartyMemberships(SNAP_ExternalPartyMembership entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_ExternalPartyMembershipType = this;
		}
		
		private void detach_SNAP_ExternalPartyMemberships(SNAP_ExternalPartyMembership entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_ExternalPartyMembershipType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_Party")]
	public partial class SNAP_Party : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartyId;
		
		private string _Name;
		
		private string _PartyTypeLabel;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private EntitySet<SNAP_Address> _SNAP_Addresses;
		
		private EntitySet<SNAP_EmailAddress> _SNAP_EmailAddresses;
		
		private EntitySet<SNAP_ExternalPartyMembership> _SNAP_ExternalPartyMemberships;
		
		private EntitySet<SNAP_PhoneNumber> _SNAP_PhoneNumbers;
		
		private EntitySet<SNAP_Profile> _SNAP_Profiles;
		
		private EntitySet<SNAP_Website> _SNAP_Websites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartyIdChanging(int value);
    partial void OnPartyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPartyTypeLabelChanging(string value);
    partial void OnPartyTypeLabelChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    #endregion
		
		public SNAP_Party()
		{
			this._SNAP_Addresses = new EntitySet<SNAP_Address>(new Action<SNAP_Address>(this.attach_SNAP_Addresses), new Action<SNAP_Address>(this.detach_SNAP_Addresses));
			this._SNAP_EmailAddresses = new EntitySet<SNAP_EmailAddress>(new Action<SNAP_EmailAddress>(this.attach_SNAP_EmailAddresses), new Action<SNAP_EmailAddress>(this.detach_SNAP_EmailAddresses));
			this._SNAP_ExternalPartyMemberships = new EntitySet<SNAP_ExternalPartyMembership>(new Action<SNAP_ExternalPartyMembership>(this.attach_SNAP_ExternalPartyMemberships), new Action<SNAP_ExternalPartyMembership>(this.detach_SNAP_ExternalPartyMemberships));
			this._SNAP_PhoneNumbers = new EntitySet<SNAP_PhoneNumber>(new Action<SNAP_PhoneNumber>(this.attach_SNAP_PhoneNumbers), new Action<SNAP_PhoneNumber>(this.detach_SNAP_PhoneNumbers));
			this._SNAP_Profiles = new EntitySet<SNAP_Profile>(new Action<SNAP_Profile>(this.attach_SNAP_Profiles), new Action<SNAP_Profile>(this.detach_SNAP_Profiles));
			this._SNAP_Websites = new EntitySet<SNAP_Website>(new Action<SNAP_Website>(this.attach_SNAP_Websites), new Action<SNAP_Website>(this.detach_SNAP_Websites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyTypeLabel", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string PartyTypeLabel
		{
			get
			{
				return this._PartyTypeLabel;
			}
			set
			{
				if ((this._PartyTypeLabel != value))
				{
					this.OnPartyTypeLabelChanging(value);
					this.SendPropertyChanging();
					this._PartyTypeLabel = value;
					this.SendPropertyChanged("PartyTypeLabel");
					this.OnPartyTypeLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Address", Storage="_SNAP_Addresses", ThisKey="PartyId", OtherKey="PartyId")]
		public EntitySet<SNAP_Address> SNAP_Addresses
		{
			get
			{
				return this._SNAP_Addresses;
			}
			set
			{
				this._SNAP_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_EmailAddress", Storage="_SNAP_EmailAddresses", ThisKey="PartyId", OtherKey="PartyId")]
		public EntitySet<SNAP_EmailAddress> SNAP_EmailAddresses
		{
			get
			{
				return this._SNAP_EmailAddresses;
			}
			set
			{
				this._SNAP_EmailAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_ExternalPartyMembership", Storage="_SNAP_ExternalPartyMemberships", ThisKey="PartyId", OtherKey="PartyId")]
		public EntitySet<SNAP_ExternalPartyMembership> SNAP_ExternalPartyMemberships
		{
			get
			{
				return this._SNAP_ExternalPartyMemberships;
			}
			set
			{
				this._SNAP_ExternalPartyMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_PhoneNumber", Storage="_SNAP_PhoneNumbers", ThisKey="PartyId", OtherKey="PartyId")]
		public EntitySet<SNAP_PhoneNumber> SNAP_PhoneNumbers
		{
			get
			{
				return this._SNAP_PhoneNumbers;
			}
			set
			{
				this._SNAP_PhoneNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Profile", Storage="_SNAP_Profiles", ThisKey="PartyId", OtherKey="OwnerPartyId")]
		public EntitySet<SNAP_Profile> SNAP_Profiles
		{
			get
			{
				return this._SNAP_Profiles;
			}
			set
			{
				this._SNAP_Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Website", Storage="_SNAP_Websites", ThisKey="PartyId", OtherKey="PartyId")]
		public EntitySet<SNAP_Website> SNAP_Websites
		{
			get
			{
				return this._SNAP_Websites;
			}
			set
			{
				this._SNAP_Websites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SNAP_Addresses(SNAP_Address entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_Addresses(SNAP_Address entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
		
		private void attach_SNAP_EmailAddresses(SNAP_EmailAddress entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_EmailAddresses(SNAP_EmailAddress entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
		
		private void attach_SNAP_ExternalPartyMemberships(SNAP_ExternalPartyMembership entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_ExternalPartyMemberships(SNAP_ExternalPartyMembership entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
		
		private void attach_SNAP_PhoneNumbers(SNAP_PhoneNumber entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_PhoneNumbers(SNAP_PhoneNumber entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
		
		private void attach_SNAP_Profiles(SNAP_Profile entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_Profiles(SNAP_Profile entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
		
		private void attach_SNAP_Websites(SNAP_Website entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = this;
		}
		
		private void detach_SNAP_Websites(SNAP_Website entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Party = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_PhoneNumber")]
	public partial class SNAP_PhoneNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberId;
		
		private string _Purpose;
		
		private string _PhoneNumber;
		
		private string _Extension;
		
		private System.Nullable<bool> _IsFax;
		
		private System.Nullable<int> _PartyId;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private System.Nullable<bool> _IsPreferred;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberIdChanging(int value);
    partial void OnPhoneNumberIdChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnIsFaxChanging(System.Nullable<bool> value);
    partial void OnIsFaxChanged();
    partial void OnPartyIdChanging(System.Nullable<int> value);
    partial void OnPartyIdChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    partial void OnIsPreferredChanging(System.Nullable<bool> value);
    partial void OnIsPreferredChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SNAP_PhoneNumber()
		{
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberId
		{
			get
			{
				return this._PhoneNumberId;
			}
			set
			{
				if ((this._PhoneNumberId != value))
				{
					this.OnPhoneNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberId = value;
					this.SendPropertyChanged("PhoneNumberId");
					this.OnPhoneNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(40)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFax", DbType="Bit")]
		public System.Nullable<bool> IsFax
		{
			get
			{
				return this._IsFax;
			}
			set
			{
				if ((this._IsFax != value))
				{
					this.OnIsFaxChanging(value);
					this.SendPropertyChanging();
					this._IsFax = value;
					this.SendPropertyChanged("IsFax");
					this.OnIsFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int")]
		public System.Nullable<int> PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPreferred", DbType="Bit")]
		public System.Nullable<bool> IsPreferred
		{
			get
			{
				return this._IsPreferred;
			}
			set
			{
				if ((this._IsPreferred != value))
				{
					this.OnIsPreferredChanging(value);
					this.SendPropertyChanging();
					this._IsPreferred = value;
					this.SendPropertyChanged("IsPreferred");
					this.OnIsPreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_PhoneNumber", Storage="_SNAP_Party", ThisKey="PartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_PhoneNumbers.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_PhoneNumbers.Add(this);
						this._PartyId = value.PartyId;
					}
					else
					{
						this._PartyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_Profile")]
	public partial class SNAP_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProfileTemplateLabel;
		
		private int _OwnerPartyId;
		
		private string _SubjectLabel;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private int _ProfileId;
		
		private EntitySet<SNAP_ProfileProperty> _SNAP_ProfileProperties;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
		private EntityRef<SNAP_ProfileTemplate> _SNAP_ProfileTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileTemplateLabelChanging(string value);
    partial void OnProfileTemplateLabelChanged();
    partial void OnOwnerPartyIdChanging(int value);
    partial void OnOwnerPartyIdChanged();
    partial void OnSubjectLabelChanging(string value);
    partial void OnSubjectLabelChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    partial void OnProfileIdChanging(int value);
    partial void OnProfileIdChanged();
    #endregion
		
		public SNAP_Profile()
		{
			this._SNAP_ProfileProperties = new EntitySet<SNAP_ProfileProperty>(new Action<SNAP_ProfileProperty>(this.attach_SNAP_ProfileProperties), new Action<SNAP_ProfileProperty>(this.detach_SNAP_ProfileProperties));
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			this._SNAP_ProfileTemplate = default(EntityRef<SNAP_ProfileTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTemplateLabel", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ProfileTemplateLabel
		{
			get
			{
				return this._ProfileTemplateLabel;
			}
			set
			{
				if ((this._ProfileTemplateLabel != value))
				{
					if (this._SNAP_ProfileTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileTemplateLabelChanging(value);
					this.SendPropertyChanging();
					this._ProfileTemplateLabel = value;
					this.SendPropertyChanged("ProfileTemplateLabel");
					this.OnProfileTemplateLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerPartyId", DbType="Int NOT NULL")]
		public int OwnerPartyId
		{
			get
			{
				return this._OwnerPartyId;
			}
			set
			{
				if ((this._OwnerPartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerPartyIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerPartyId = value;
					this.SendPropertyChanged("OwnerPartyId");
					this.OnOwnerPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectLabel", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SubjectLabel
		{
			get
			{
				return this._SubjectLabel;
			}
			set
			{
				if ((this._SubjectLabel != value))
				{
					this.OnSubjectLabelChanging(value);
					this.SendPropertyChanging();
					this._SubjectLabel = value;
					this.SendPropertyChanged("SubjectLabel");
					this.OnSubjectLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Profile_SNAP_ProfileProperty", Storage="_SNAP_ProfileProperties", ThisKey="ProfileId", OtherKey="ProfileId")]
		public EntitySet<SNAP_ProfileProperty> SNAP_ProfileProperties
		{
			get
			{
				return this._SNAP_ProfileProperties;
			}
			set
			{
				this._SNAP_ProfileProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Profile", Storage="_SNAP_Party", ThisKey="OwnerPartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_Profiles.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_Profiles.Add(this);
						this._OwnerPartyId = value.PartyId;
					}
					else
					{
						this._OwnerPartyId = default(int);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_ProfileTemplate_SNAP_Profile", Storage="_SNAP_ProfileTemplate", ThisKey="ProfileTemplateLabel", OtherKey="ProfileTemplateLabel", IsForeignKey=true)]
		public SNAP_ProfileTemplate SNAP_ProfileTemplate
		{
			get
			{
				return this._SNAP_ProfileTemplate.Entity;
			}
			set
			{
				SNAP_ProfileTemplate previousValue = this._SNAP_ProfileTemplate.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_ProfileTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_ProfileTemplate.Entity = null;
						previousValue.SNAP_Profiles.Remove(this);
					}
					this._SNAP_ProfileTemplate.Entity = value;
					if ((value != null))
					{
						value.SNAP_Profiles.Add(this);
						this._ProfileTemplateLabel = value.ProfileTemplateLabel;
					}
					else
					{
						this._ProfileTemplateLabel = default(string);
					}
					this.SendPropertyChanged("SNAP_ProfileTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SNAP_ProfileProperties(SNAP_ProfileProperty entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Profile = this;
		}
		
		private void detach_SNAP_ProfileProperties(SNAP_ProfileProperty entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_Profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_ProfileProperty")]
	public partial class SNAP_ProfileProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PropertyName;
		
		private string _PropertyValue;
		
		private int _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private int _ProfileId;
		
		private EntityRef<SNAP_Profile> _SNAP_Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnModifiedByChanging(int value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnProfileIdChanging(int value);
    partial void OnProfileIdChanged();
    #endregion
		
		public SNAP_ProfileProperty()
		{
			this._SNAP_Profile = default(EntityRef<SNAP_Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int NOT NULL")]
		public int ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					if (this._SNAP_Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Profile_SNAP_ProfileProperty", Storage="_SNAP_Profile", ThisKey="ProfileId", OtherKey="ProfileId", IsForeignKey=true)]
		public SNAP_Profile SNAP_Profile
		{
			get
			{
				return this._SNAP_Profile.Entity;
			}
			set
			{
				SNAP_Profile previousValue = this._SNAP_Profile.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Profile.Entity = null;
						previousValue.SNAP_ProfileProperties.Remove(this);
					}
					this._SNAP_Profile.Entity = value;
					if ((value != null))
					{
						value.SNAP_ProfileProperties.Add(this);
						this._ProfileId = value.ProfileId;
					}
					else
					{
						this._ProfileId = default(int);
					}
					this.SendPropertyChanged("SNAP_Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_ProfileTemplate")]
	public partial class SNAP_ProfileTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProfileTemplateLabel;
		
		private string _Vocabulary;
		
		private int _CreatedBy;
		
		private System.DateTime _EffectiveDate;
		
		private System.DateTime _UntilDate;
		
		private EntitySet<SNAP_Profile> _SNAP_Profiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileTemplateLabelChanging(string value);
    partial void OnProfileTemplateLabelChanged();
    partial void OnVocabularyChanging(string value);
    partial void OnVocabularyChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnEffectiveDateChanging(System.DateTime value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.DateTime value);
    partial void OnUntilDateChanged();
    #endregion
		
		public SNAP_ProfileTemplate()
		{
			this._SNAP_Profiles = new EntitySet<SNAP_Profile>(new Action<SNAP_Profile>(this.attach_SNAP_Profiles), new Action<SNAP_Profile>(this.detach_SNAP_Profiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTemplateLabel", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProfileTemplateLabel
		{
			get
			{
				return this._ProfileTemplateLabel;
			}
			set
			{
				if ((this._ProfileTemplateLabel != value))
				{
					this.OnProfileTemplateLabelChanging(value);
					this.SendPropertyChanging();
					this._ProfileTemplateLabel = value;
					this.SendPropertyChanged("ProfileTemplateLabel");
					this.OnProfileTemplateLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vocabulary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Vocabulary
		{
			get
			{
				return this._Vocabulary;
			}
			set
			{
				if ((this._Vocabulary != value))
				{
					this.OnVocabularyChanging(value);
					this.SendPropertyChanging();
					this._Vocabulary = value;
					this.SendPropertyChanged("Vocabulary");
					this.OnVocabularyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime NOT NULL")]
		public System.DateTime UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_ProfileTemplate_SNAP_Profile", Storage="_SNAP_Profiles", ThisKey="ProfileTemplateLabel", OtherKey="ProfileTemplateLabel")]
		public EntitySet<SNAP_Profile> SNAP_Profiles
		{
			get
			{
				return this._SNAP_Profiles;
			}
			set
			{
				this._SNAP_Profiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SNAP_Profiles(SNAP_Profile entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_ProfileTemplate = this;
		}
		
		private void detach_SNAP_Profiles(SNAP_Profile entity)
		{
			this.SendPropertyChanging();
			entity.SNAP_ProfileTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_RegionDefinition")]
	public partial class SNAP_RegionDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionId;
		
		private string _RegionName;
		
		private string _CountryCode;
		
		private string _City;
		
		private string _County;
		
		private string _PostalCode;
		
		private string _StateCode;
		
		private double _North;
		
		private double _South;
		
		private double _East;
		
		private double _West;
		
		private System.Data.Linq.Binary _Shapes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnNorthChanging(double value);
    partial void OnNorthChanged();
    partial void OnSouthChanging(double value);
    partial void OnSouthChanged();
    partial void OnEastChanging(double value);
    partial void OnEastChanged();
    partial void OnWestChanging(double value);
    partial void OnWestChanged();
    partial void OnShapesChanging(System.Data.Linq.Binary value);
    partial void OnShapesChanged();
    #endregion
		
		public SNAP_RegionDefinition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(200)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(200)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(40)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(3)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_North", DbType="Float NOT NULL")]
		public double North
		{
			get
			{
				return this._North;
			}
			set
			{
				if ((this._North != value))
				{
					this.OnNorthChanging(value);
					this.SendPropertyChanging();
					this._North = value;
					this.SendPropertyChanged("North");
					this.OnNorthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_South", DbType="Float NOT NULL")]
		public double South
		{
			get
			{
				return this._South;
			}
			set
			{
				if ((this._South != value))
				{
					this.OnSouthChanging(value);
					this.SendPropertyChanging();
					this._South = value;
					this.SendPropertyChanged("South");
					this.OnSouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_East", DbType="Float NOT NULL")]
		public double East
		{
			get
			{
				return this._East;
			}
			set
			{
				if ((this._East != value))
				{
					this.OnEastChanging(value);
					this.SendPropertyChanging();
					this._East = value;
					this.SendPropertyChanged("East");
					this.OnEastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_West", DbType="Float NOT NULL")]
		public double West
		{
			get
			{
				return this._West;
			}
			set
			{
				if ((this._West != value))
				{
					this.OnWestChanging(value);
					this.SendPropertyChanging();
					this._West = value;
					this.SendPropertyChanged("West");
					this.OnWestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shapes", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Shapes
		{
			get
			{
				return this._Shapes;
			}
			set
			{
				if ((this._Shapes != value))
				{
					this.OnShapesChanging(value);
					this.SendPropertyChanging();
					this._Shapes = value;
					this.SendPropertyChanged("Shapes");
					this.OnShapesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_RegionsServed")]
	public partial class SNAP_RegionsServed
	{
		
		private int _PartyId;
		
		private int _RegionId;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		public SNAP_RegionsServed()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int NOT NULL")]
		public int PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					this._PartyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this._RegionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_Website")]
	public partial class SNAP_Website : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WebsiteId;
		
		private string _Purpose;
		
		private string _URL;
		
		private System.Nullable<int> _PartyId;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _UntilDate;
		
		private System.Nullable<bool> _IsPreferred;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<SNAP_Party> _SNAP_Party;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebsiteIdChanging(int value);
    partial void OnWebsiteIdChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnPartyIdChanging(System.Nullable<int> value);
    partial void OnPartyIdChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnUntilDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUntilDateChanged();
    partial void OnIsPreferredChanging(System.Nullable<bool> value);
    partial void OnIsPreferredChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SNAP_Website()
		{
			this._SNAP_Party = default(EntityRef<SNAP_Party>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WebsiteId
		{
			get
			{
				return this._WebsiteId;
			}
			set
			{
				if ((this._WebsiteId != value))
				{
					this.OnWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._WebsiteId = value;
					this.SendPropertyChanged("WebsiteId");
					this.OnWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int")]
		public System.Nullable<int> PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this._SNAP_Party.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UntilDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UntilDate
		{
			get
			{
				return this._UntilDate;
			}
			set
			{
				if ((this._UntilDate != value))
				{
					this.OnUntilDateChanging(value);
					this.SendPropertyChanging();
					this._UntilDate = value;
					this.SendPropertyChanged("UntilDate");
					this.OnUntilDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPreferred", DbType="Bit")]
		public System.Nullable<bool> IsPreferred
		{
			get
			{
				return this._IsPreferred;
			}
			set
			{
				if ((this._IsPreferred != value))
				{
					this.OnIsPreferredChanging(value);
					this.SendPropertyChanging();
					this._IsPreferred = value;
					this.SendPropertyChanged("IsPreferred");
					this.OnIsPreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SNAP_Party_SNAP_Website", Storage="_SNAP_Party", ThisKey="PartyId", OtherKey="PartyId", IsForeignKey=true)]
		public SNAP_Party SNAP_Party
		{
			get
			{
				return this._SNAP_Party.Entity;
			}
			set
			{
				SNAP_Party previousValue = this._SNAP_Party.Entity;
				if (((previousValue != value) 
							|| (this._SNAP_Party.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SNAP_Party.Entity = null;
						previousValue.SNAP_Websites.Remove(this);
					}
					this._SNAP_Party.Entity = value;
					if ((value != null))
					{
						value.SNAP_Websites.Add(this);
						this._PartyId = value.PartyId;
					}
					else
					{
						this._PartyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SNAP_Party");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SNAP_ServiceArea")]
	public partial class SNAP_ServiceArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartyId;
		
		private string _PostalCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartyIdChanging(int value);
    partial void OnPartyIdChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    #endregion
		
		public SNAP_ServiceArea()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SNAP_GetPartyForProfile_UseDistanceRangeResult
	{
		
		private int _PartyId;
		
		private string _PartyName;
		
		private string _PartyPhysicalAddress;
		
		private string _PartyPhysicalCity;
		
		private string _PartyPhysicalState;
		
		private string _PartyPhysicalPostalCode;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<double> _Mileage;
		
		private string _PartyPhoneVoice;
		
		private string _PartyPhoneFax;
		
		private string _PartyPhoneMobile;
		
		private string _PartyEmail;
		
		private string _PartyWebsite;
		
		private string _DefaultImageFileName;
		
		private string _PartyPhoneDisplayVoice;
		
		private string _ProfileTemplateLabel;
		
		private System.Nullable<System.DateTime> _FeatureStartDate;
		
		public SNAP_GetPartyForProfile_UseDistanceRangeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="Int NOT NULL")]
		public int PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					this._PartyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyName", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string PartyName
		{
			get
			{
				return this._PartyName;
			}
			set
			{
				if ((this._PartyName != value))
				{
					this._PartyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhysicalAddress", DbType="NVarChar(400)")]
		public string PartyPhysicalAddress
		{
			get
			{
				return this._PartyPhysicalAddress;
			}
			set
			{
				if ((this._PartyPhysicalAddress != value))
				{
					this._PartyPhysicalAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhysicalCity", DbType="NVarChar(200)")]
		public string PartyPhysicalCity
		{
			get
			{
				return this._PartyPhysicalCity;
			}
			set
			{
				if ((this._PartyPhysicalCity != value))
				{
					this._PartyPhysicalCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhysicalState", DbType="NVarChar(80)")]
		public string PartyPhysicalState
		{
			get
			{
				return this._PartyPhysicalState;
			}
			set
			{
				if ((this._PartyPhysicalState != value))
				{
					this._PartyPhysicalState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhysicalPostalCode", DbType="NVarChar(40)")]
		public string PartyPhysicalPostalCode
		{
			get
			{
				return this._PartyPhysicalPostalCode;
			}
			set
			{
				if ((this._PartyPhysicalPostalCode != value))
				{
					this._PartyPhysicalPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Float")]
		public System.Nullable<double> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this._Mileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhoneVoice", DbType="Char(10)")]
		public string PartyPhoneVoice
		{
			get
			{
				return this._PartyPhoneVoice;
			}
			set
			{
				if ((this._PartyPhoneVoice != value))
				{
					this._PartyPhoneVoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhoneFax", DbType="Char(10)")]
		public string PartyPhoneFax
		{
			get
			{
				return this._PartyPhoneFax;
			}
			set
			{
				if ((this._PartyPhoneFax != value))
				{
					this._PartyPhoneFax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhoneMobile", DbType="Char(10)")]
		public string PartyPhoneMobile
		{
			get
			{
				return this._PartyPhoneMobile;
			}
			set
			{
				if ((this._PartyPhoneMobile != value))
				{
					this._PartyPhoneMobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyEmail", DbType="NVarChar(200)")]
		public string PartyEmail
		{
			get
			{
				return this._PartyEmail;
			}
			set
			{
				if ((this._PartyEmail != value))
				{
					this._PartyEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyWebsite", DbType="NVarChar(500)")]
		public string PartyWebsite
		{
			get
			{
				return this._PartyWebsite;
			}
			set
			{
				if ((this._PartyWebsite != value))
				{
					this._PartyWebsite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultImageFileName", DbType="VarChar(512)")]
		public string DefaultImageFileName
		{
			get
			{
				return this._DefaultImageFileName;
			}
			set
			{
				if ((this._DefaultImageFileName != value))
				{
					this._DefaultImageFileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyPhoneDisplayVoice", DbType="Char(10)")]
		public string PartyPhoneDisplayVoice
		{
			get
			{
				return this._PartyPhoneDisplayVoice;
			}
			set
			{
				if ((this._PartyPhoneDisplayVoice != value))
				{
					this._PartyPhoneDisplayVoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTemplateLabel", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ProfileTemplateLabel
		{
			get
			{
				return this._ProfileTemplateLabel;
			}
			set
			{
				if ((this._ProfileTemplateLabel != value))
				{
					this._ProfileTemplateLabel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FeatureStartDate
		{
			get
			{
				return this._FeatureStartDate;
			}
			set
			{
				if ((this._FeatureStartDate != value))
				{
					this._FeatureStartDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
